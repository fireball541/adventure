#xMove(d) ternary.double({d}=="L",-1.,ternary.double({d}=="R",1.,0.))
#yMove(d) ternary.double({d}=="U",1.,ternary.double({d}=="D",-1.,0.))
#move(d) vec({xMove({d})},{yMove({d})})
#goRight(x) a.i({x},"+",1)
#goLeft(x) a.i({x},"-",1)
#goUp(x) max(a.i({x},"+",19),0)
#goDown(x) min(a.i({x},"-",19),360)
#posToVec(x) vec(i2d({x}%19),i2d({x}/19))
#playerPos d2i(x(adventure.playerPos()))+a.i(19,"*",d2i(y(adventure.playerPos())))
#enemyDirection ternary.string(adventure.isEnemy({posToVec({goUp({playerPos})})}),"U",\
	ternary.string(adventure.isEnemy({posToVec({goRight({playerPos})})}),"R",\
    ternary.string(adventure.isEnemy({posToVec({goDown({playerPos})})}),"D",\
    ternary.string(adventure.isEnemy({posToVec({goLeft({playerPos})})}),"L","W"))))

key.k()

isopen("arcade")

gotoif(start,impulse()!="key.k")
executesync("turbo start")
start:
goto(ternary.int(adventure.countEntities("Enemy") > 0,wait,ternary.int(impulse()=="key.k",stop,end)))
wait:
	executesync("turbo stop")
	adventure.wait()
	executesync("turbo start")
    gotoif(wait,{enemyDirection}=="W")
attack:
	executesync("turbo stop")
	adventure.move({move({enemyDirection})})
	executesync("turbo start")
	goto(ternary.int({enemyDirection}!="W",attack,start))
stop:
	executesync("turbo stop")
end:
wait(0.)
