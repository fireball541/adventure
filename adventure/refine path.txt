:global string leon.adventure.path
:global int leon.adventure.eod

:local string path
:local int curPos
:local int stepCount


#goRight(pos) a.i({pos},"+",1)
#goLeft(pos) a.i({pos},"-",1)
#goUp(pos) a.i({pos},"+",19)
#goDown(pos) a.i({pos},"-",19)
#nextField(d) ternary.int({d}=="U",{goUp(curPos)},ternary.int({d}=="D",{goDown(curPos)},ternary.int({d}=="R",{goRight(curPos)},{goLeft(curPos)})))
#curDirection sub(path,stepCount,1)
#insert(st,i,val) concat(concat(sub({st},0,{i}),{val}),sub({st},{i},len({st})-{i}))
#inverse(d) ternary.string({d}=="U","D",ternary.string({d}=="D","U",\
	ternary.string({d}=="R","L","R")))
#posToVec(x) vec(i2d({x}%19),i2d({x}/19))
#getEntity(pos) adventure.entityType({posToVec({pos})})
#getCurrentEntity {getEntity({nextField({curDirection})})}
#escapeDirection ternary.string(\
			{getEntity({goUp(curPos)})} == "" && \
			{getEntity({goUp({goUp(curPos)})})} == "" && \
    		(false == adventure.isWall({posToVec({goUp(curPos)})})) &&\
            {goUp(curPos)} != 351,\
        "BUUWDD",ternary.string(\
        	{getEntity({goDown(curPos)})}=="" && \
			{getEntity({goDown({goDown(curPos)})})} == "" && \
    		(false == adventure.isWall({posToVec({goDown(curPos)})})) &&\
            {goDown(curPos)} != 9,\
        "BDDWUU",ternary.string(\
        	{getEntity({goLeft(curPos)})} == "" && \
			{getEntity({goLeft({goLeft(curPos)})})} == "" && \
    		(false == adventure.isWall({posToVec({goLeft(curPos)})})) &&\
            {goLeft(curPos)} != 171,\
        "BLLWRR","BRRWLL")))

start:
curPos=d2i(x(adventure.playerPos()))+a.i(19,"*",d2i(y(adventure.playerPos())))
stepCount = 0
path=leon.adventure.path
loop:
goto(ternary.int(stepCount>=len(path),end,ternary.int(\
		{getCurrentEntity} == "Door",door,\
	ternary.int({getCurrentEntity} == "Rock",rock,nextTile))))
rock:        	
	path = {insert(path,stepCount,ternary.string(adventure.hasItem("hammer"),{curDirection},ternary.string(adventure.hasItem("eodArmor"), "BWWW", {escapeDirection})))}
	stepCount+=ternary.int(leon.adventure.eod==1,4,6)
	goto(nextTile)
door:
	path={insert(path,stepCount,{curDirection})}
    stepCount+=1
nextTile:
	curPos={nextField({curDirection})}
    stepCount+=1
    goto(loop)
end:
	leon.adventure.path = path
    wait(0.)
    
